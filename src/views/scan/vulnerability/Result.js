import React, { useState } from "react";
import { useEffect } from "react";
import axiosClient from "../../../axiosClient";
import {Link,useLocation} from 'react-router-dom'
import queryString from 'query-string'
import { Row, Col, Card, Table, Button, Form} from 'react-bootstrap';
import { StopIcon, InfoIcon, DeleteIcon } from "../../../components/Icon/Icon";

function Result() {
  const { search } = useLocation();
  console.log(search);
  const values = queryString.parse(search)
  console.log(values);
  console.log(values.target_id);
  const [listResults, setlistResults] = useState([]);
  const [id,setId] = useState()
  const [ref,setref] = useState()

  useEffect(() => {
    async function getItem() {
      const url = values.target_id ? `targets/${values.target_id}/scans`:"scans"
      const res = await axiosClient.get(url);

      console.log(res.data.items);
      setlistResults((listResults) => [...res.data.items]);
      console.log(listResults);
    }
    getItem();
  }, [values.target_id]);
  async function getReport(id){
    setId(id)
    const res = await axiosClient.get(`scans/${id}/report`,{
      headers:
      {
          'Content-Disposition': "attachment; filename=report.docx",
          'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
      },
      responseType: 'arraybuffer',
    })
    const path = window.URL.createObjectURL(new Blob([res.data]));
    const link = document.createElement('a');
    link.href = path;
    link.setAttribute('download', 'report.docx'); //or any other extension
    document.body.appendChild(link);
    link.click();
   }
   return (
    <React.Fragment>
      <Row>
        <Col>
          <Card>
            <Card.Header>
              <Card.Title as="h5">Danh sách dò quét</Card.Title>
            </Card.Header>
            <Card.Body>
              <Table responsive hover>
              <thead>
                    <tr>
                      <th className="border-0">ID</th>
                      <th className="border-0">Tên miền</th>
                      <th className="border-0">Trạng thái</th>
                      <th className="border-0">Thời gian</th>
                      <th className="border-0">Kết quả rà soát</th>
                      <th className="border-0"></th>
                    </tr>
                  </thead>
                  <tbody>
                  
                    {listResults &&
                      listResults.map((item) => {
                        return (
                          <tr key={item.id}>
                            <td>{item.id}</td>
                            <td>{item.address}</td>
                            <td>{String(item.is_running)}</td>
                            <td>{item.created_at}</td>
                            <tr style={{backgroundColor:"#f2f2f200"}}>
                         

                            <button type="button" style={{borderRadius:"50%", padding:"4px 10px", marginTop: 10}} title="Nguy hiểm cao" class="btn btn-danger btn-circle btn-sm">{item.high}</button>
                          
                            <button type="button" style={{borderRadius:"50%", padding:"4px 10px", marginTop: 10}} title="Nguy hiểm trung bình" class="btn btn-warning btn-circle btn-sm">{item.medium}</button>
                            <button type="button" style={{borderRadius:"50%", padding:"4px 10px", marginTop: 10}} title="Nguy hiểm thấp" class="btn btn-primary btn-circle btn-sm">{item.low}</button>
                            <button type="button" style={{borderRadius:"50%", padding:"4px 10px", marginTop: 10}} title="Nguy cơ" class="btn btn-success btn-circle btn-sm">{item.information}</button>
                            </tr>
                            <td >
                               <div style={{display: "flex", gap: 4, justifyContent: "space-between"}}> 
                               <span style ={{cursor:"pointer"}}><StopIcon fill={item.is_running?"black":"#D0D2D6"} /></span>
                               <Link to={`/scan/vulnerability/vulnerability?task_id=${item.id}`}><InfoIcon/></Link>
                               <span style ={{cursor:"pointer"}}><DeleteIcon/></span>
                               </div>
                            </td>
                          </tr>
                        );
                      })}
                   
                  </tbody>
              </Table>
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </React.Fragment>
  );
};

export default Result;
