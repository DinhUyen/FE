import React, { useState } from "react";
import Modal from "react-bootstrap/Modal";
import { useEffect } from "react";
import axiosClient from "../../../axiosClient";
import { Link, useLocation } from "react-router-dom";
import queryString from "query-string";
import Detail from "./detail";
import {
  Badge,
  Button,
  Card,
  Navbar,
  Nav,
  Table,
  Container,
  Row,
  Col,
  Form,
} from "react-bootstrap";
function Vulnerability() {
  const [url, setUrl] = useState();
  const [severity, setSevirity] = useState();
  const { search } = useLocation();
  const [isShow, setIsShow] = useState(false);
  const [data, setData] = useState(1);
  console.log(search);
  const values = queryString.parse(search);
  console.log(values);
  console.log(values.task_id);
  const [listVulnerabilities, setlistVulnerabilities] = useState([]);

  const showDetail = (index) => {
    setIsShow(true);
    setData(index);
  };
  useEffect(() => {
    async function getItem() {
      const url = `scans/${values.task_id}/vulnerabilities`;
      const res = await axiosClient.get(url);

      console.log(res.data.items);
      setlistVulnerabilities((listVulnerabilities) => [...res.data.items]);
      console.log(listVulnerabilities);
    }
    getItem();
  }, [values.task_id]);
  return (
    <>
      <Container fluid>
        <Row>
          <Col md={isShow ? 6 : 12}>
            <Card>
              <Card.Body>
                <div>
                  <Row>
                  
                    <div className="font-icon-detail icon-vul">
                      <i className="nc-icon nc-preferences-circle-rotate"></i>
                    </div>
                
                    <div className="col-md-5">
                      <input
                        type="text"
                        className="form-control"
                        placeholder="Website URL (e.g.. yourdomain.com)"
                        value={url}
                        onChange={(e) => setUrl(e.target.value)}
                      />
                    </div>
                    <div className="col-md-5">
                      <input
                        type="text"
                        className="form-control"
                        placeholder="Severity"
                        value={severity}
                        onChange={(e) => setSevirity(e.target.value)}
                      />
                    </div>
                  </Row>
                </div>
                <div className="form-group"></div>
                <div></div>
              </Card.Body>
            </Card>
          </Col>
        </Row>
        <Row>
          <Col md={isShow ? 6 : 12}>
            <Card className="strpied-tabled-with-hover">
              <Card.Body className="table-full-width table-responsive px-0">
                <Table className="table-hover table-striped">
                  <thead>
                    <tr>
                      <th className="border-0">ID</th>
                      <th className="border-1">Url</th>
                      <th className="border-2">Severity</th>
                    </tr>
                  </thead>
                  <tbody>
                    {listVulnerabilities &&
                      listVulnerabilities.map((item) => {
                        return (
                          <tr key={item.id}>
                            <td>
                              <Link
                                onClick={(e) => showDetail(item.id)}
                                to={`/scan/vulnerability/vulnerability/${item.id}${search}`}
                              >
                                {item.id}
                              </Link>
                            </td>
                            <td>{item.name}</td>
                            <td>{item.severity}</td>
                          </tr>
                        );
                      })}
                  </tbody>
                </Table>
              </Card.Body>
            </Card>
          </Col>
          {isShow && (
            <Col md="6">
              <Detail data={data} />
            </Col>
          )}
        </Row>
      </Container>
    </>
  );
}

export default Vulnerability;
